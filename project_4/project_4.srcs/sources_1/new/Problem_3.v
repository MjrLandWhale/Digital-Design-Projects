`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 01/24/2016 04:43:56 PM
// Design Name: 
// Module Name: Problem_3
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Problem_3(
    input [7:0] In,
    output reg [7:0] Out,
    input Dir,
    input Rot,
    input Fill,
    input [1:0] Shift
    );
    
    always @(In or Dir or Rot or Fill or Shift)
    begin
        case({Shift})
            2'b00:
                begin
                Out=In;
                end
            2'b01:
                begin
                if(Rot)
                    begin
                    if(!Dir)//Left
                        begin
                        Out[0]=In[7];
                        Out[1]=In[0];
                        Out[2]=In[1];
                        Out[3]=In[2];
                        Out[4]=In[3];
                        Out[5]=In[4];
                        Out[6]=In[5];
                        Out[7]=In[6];  
                        end
                    else
                        begin
                        Out[0]=In[1];
                        Out[1]=In[2];
                        Out[2]=In[3];
                        Out[3]=In[4];
                        Out[4]=In[5];
                        Out[5]=In[6];
                        Out[6]=In[7];
                        Out[7]=In[0];  
                        end
                    end
                else
                    begin
                    if(!Fill)
                        begin
                        if(!Dir)//Left
                            begin
                            Out[0]=0;
                            Out[1]=In[0];
                            Out[2]=In[1];
                            Out[3]=In[2];
                            Out[4]=In[3];
                            Out[5]=In[4];
                            Out[6]=In[5];
                            Out[7]=In[6];  
                            end
                        else
                            begin
                            Out[0]=In[1];
                            Out[1]=In[2];
                            Out[2]=In[3];
                            Out[3]=In[4];
                            Out[4]=In[5];
                            Out[5]=In[6];
                            Out[6]=In[7];
                            Out[7]=0;  
                            end
                        end
                    else
                        begin
                        if(!Dir)//Left
                            begin
                            Out[0]=1;
                            Out[1]=In[0];
                            Out[2]=In[1];
                            Out[3]=In[2];
                            Out[4]=In[3];
                            Out[5]=In[4];
                            Out[6]=In[5];
                            Out[7]=In[6];  
                            end
                        else
                            begin
                            Out[0]=In[1];
                            Out[1]=In[2];
                            Out[2]=In[3];
                            Out[3]=In[4];
                            Out[4]=In[5];
                            Out[5]=In[6];
                            Out[6]=In[7];
                            Out[7]=1;  
                            end
                        end
                    end
                end
            2'b10:
                begin
                if(Rot)
                    begin
                    if(!Dir)//Left
                        begin
                        Out[0]=In[6];
                        Out[1]=In[7];
                        Out[2]=In[0];
                        Out[3]=In[1];
                        Out[4]=In[2];
                        Out[5]=In[3];
                        Out[6]=In[4];
                        Out[7]=In[5];  
                        end
                    else
                        begin
                        Out[0]=In[2];
                        Out[1]=In[3];
                        Out[2]=In[4];
                        Out[3]=In[5];
                        Out[4]=In[6];
                        Out[5]=In[7];
                        Out[6]=In[0];
                        Out[7]=In[1];  
                        end
                    end
                else
                    begin
                    if(!Fill)
                        begin
                        if(!Dir)//Left
                            begin
                            Out[0]=0;
                            Out[1]=0;
                            Out[2]=In[0];
                            Out[3]=In[1];
                            Out[4]=In[2];
                            Out[5]=In[3];
                            Out[6]=In[4];
                            Out[7]=In[5];  
                            end
                        else
                            begin
                            Out[0]=In[2];
                            Out[1]=In[3];
                            Out[2]=In[4];
                            Out[3]=In[5];
                            Out[4]=In[6];
                            Out[5]=In[7];
                            Out[6]=0;
                            Out[7]=0;  
                            end
                        end
                    else
                        begin
                        if(!Dir)//Left
                            begin
                            Out[0]=1;
                            Out[1]=1;
                            Out[2]=In[0];
                            Out[3]=In[1];
                            Out[4]=In[2];
                            Out[5]=In[3];
                            Out[6]=In[4];
                            Out[7]=In[5];  
                            end
                        else
                            begin
                            Out[0]=In[2];
                            Out[1]=In[3];
                            Out[2]=In[4];
                            Out[3]=In[5];
                            Out[4]=In[6];
                            Out[5]=In[7];
                            Out[6]=1;
                            Out[7]=1;  
                            end
                        end
                    end
                end
            2'b11:
                begin
                if(Rot)
                    begin
                    if(!Dir)//Left
                        begin
                        Out[0]=In[5];
                        Out[1]=In[6];
                        Out[2]=In[7];
                        Out[3]=In[0];
                        Out[4]=In[1];
                        Out[5]=In[2];
                        Out[6]=In[3];
                        Out[7]=In[4];  
                        end
                    else
                        begin
                        Out[0]=In[3];
                        Out[1]=In[4];
                        Out[2]=In[5];
                        Out[3]=In[6];
                        Out[4]=In[7];
                        Out[5]=In[0];
                        Out[6]=In[1];
                        Out[7]=In[2];  
                        end
                    end
                else
                    begin
                    if(!Fill)
                        begin
                        if(!Dir)//Left
                            begin
                            Out[0]=0;
                            Out[1]=0;
                            Out[2]=0;
                            Out[3]=In[0];
                            Out[4]=In[1];
                            Out[5]=In[2];
                            Out[6]=In[3];
                            Out[7]=In[4];  
                            end
                        else
                            begin
                            Out[0]=In[3];
                            Out[1]=In[4];
                            Out[2]=In[5];
                            Out[3]=In[6];
                            Out[4]=In[7];
                            Out[5]=0;
                            Out[6]=0;
                            Out[7]=0;  
                            end
                        end
                    else
                        begin
                        if(!Dir)//Left
                            begin
                            Out[0]=1;
                            Out[1]=1;
                            Out[2]=1;
                            Out[3]=In[0];
                            Out[4]=In[1];
                            Out[5]=In[2];
                            Out[6]=In[3];
                            Out[7]=In[4];  
                            end
                        else
                            begin
                            Out[0]=In[3];
                            Out[1]=In[4];
                            Out[2]=In[5];
                            Out[3]=In[6];
                            Out[4]=In[7];
                            Out[5]=1;
                            Out[6]=1;
                            Out[7]=1;  
                            end
                        end
                    end
                end
        endcase
    end
endmodule
